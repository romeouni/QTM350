---
title: "Homework5"
author: "Rahul Ulman"
date: "2025-02-26"
format: revealjs
engine: jupyter
bibliography: refs.bib
theme: league
transition: concave
---

## EDA Between Life Expectancy, Gross Domestic Product and Health Expenditure

by Rahul Ulman

## Histogram Comparisons

``` {python}
#| echo: false

#Import the libraries
import pandas as pd
import wbgapi as wb
import matplotlib.pyplot as plt
import seaborn as sns

# Define the indicators to download
indicators = {
    'gdp_per_capita': 'NY.GDP.PCAP.CD',
    'gdp_growth_rate': 'NY.GDP.MKTP.KD.ZG',
    'inflation_rate': 'FP.CPI.TOTL.ZG',
    'unemployment_rate': 'SL.UEM.TOTL.ZS',
    'total_population': 'SP.POP.TOTL',
    'life_expectancy': 'SP.DYN.LE00.IN',
    'adult_literacy_rate': 'SE.ADT.LITR.ZS',
    'income_inequality': 'SI.POV.GINI',
    'health_expenditure_gdp_share': 'SH.XPD.CHEX.GD.ZS',
    'measles_immunisation_rate': 'SH.IMM.MEAS',
    'education_expenditure_gdp_share': 'SE.XPD.TOTL.GD.ZS',
    'primary_school_enrolment_rate': 'SE.PRM.ENRR',
    'exports_gdp_share': 'NE.EXP.GNFS.ZS'
}

# Get the list of country codes for the "World" region
country_codes = wb.region.members('WLD')

# Download data for countries only in 2022
df = wb.data.DataFrame(indicators.values(), economy=country_codes, time=2022, skipBlanks=True, labels=True).reset_index()

# Delete the 'economy' column
df = df.drop(columns=['economy'], errors='ignore')

# Create a reversed dictionary mapping indicator codes to names
# Rename the columns and convert all names to lowercase
df.rename(columns=lambda x: {v: k for k, v in indicators.items()}.get(x, x).lower(), inplace=True)

# Sort 'country' in ascending order
df = df.sort_values('country', ascending=True)

# Reset the index after sorting
df = df.reset_index(drop=True)

df[['life_expectancy', 'health_expenditure_gdp_share', 'gdp_per_capita']].hist(bins=30, figsize=(10, 7))
plt.tight_layout()
plt.suptitle("Histograms of Selected Indicators", fontsize=16)
plt.subplots_adjust(top=0.85)
plt.show()
```

## Heatmap Comparison

```{python}
#| echo: false
corr_matrix = df[['life_expectancy', 'health_expenditure_gdp_share', 'gdp_per_capita']].corr()
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm')
plt.title("Correlation Heatmap of Selected Indicators")
plt.show()
```

## Heatmap Analysis

- Very low positive correlation between expenditure and life expectancy
- Low positive correlation between GDP and life expectancy
- Medium positive correlation between GDP and health expenditure

## Thank you for your attention!
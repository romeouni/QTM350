---
title: "Homework5"
author: "Rahul Ulman"
date: "2025-02-26"
format:
    html: default
    pdf: default
engine: jupyter
bibliography: refs.bib
---

``` {python}
#Import the libraries
import pandas as pd
import wbgapi as wb
import matplotlib.pyplot as plt
import seaborn as sns
```

```{python}
# Define the indicators to download
indicators = {
    'gdp_per_capita': 'NY.GDP.PCAP.CD',
    'gdp_growth_rate': 'NY.GDP.MKTP.KD.ZG',
    'inflation_rate': 'FP.CPI.TOTL.ZG',
    'unemployment_rate': 'SL.UEM.TOTL.ZS',
    'total_population': 'SP.POP.TOTL',
    'life_expectancy': 'SP.DYN.LE00.IN',
    'adult_literacy_rate': 'SE.ADT.LITR.ZS',
    'income_inequality': 'SI.POV.GINI',
    'health_expenditure_gdp_share': 'SH.XPD.CHEX.GD.ZS',
    'measles_immunisation_rate': 'SH.IMM.MEAS',
    'education_expenditure_gdp_share': 'SE.XPD.TOTL.GD.ZS',
    'primary_school_enrolment_rate': 'SE.PRM.ENRR',
    'exports_gdp_share': 'NE.EXP.GNFS.ZS'
}

# Get the list of country codes for the "World" region
country_codes = wb.region.members('WLD')

# Download data for countries only in 2022
df = wb.data.DataFrame(indicators.values(), economy=country_codes, time=2022, skipBlanks=True, labels=True).reset_index()

# Delete the 'economy' column
df = df.drop(columns=['economy'], errors='ignore')

# Create a reversed dictionary mapping indicator codes to names
# Rename the columns and convert all names to lowercase
df.rename(columns=lambda x: {v: k for k, v in indicators.items()}.get(x, x).lower(), inplace=True)

# Sort 'country' in ascending order
df = df.sort_values('country', ascending=True)

# Reset the index after sorting
df = df.reset_index(drop=True)

# Display the number of rows and columns
print(df.shape)

# Display the first few rows of the data
print(df.head(3))

# Save the data to a CSV file
df.to_csv('wdi.csv', index=False)
```

## Exploratory Data Analysis

```{python}
#| label: histogram 
#| echo: false
#| fig-cap: "histogram"
df[['life_expectancy', 'health_expenditure_gdp_share', 'gdp_per_capita']].hist(bins=30, figsize=(10, 7))
plt.tight_layout()
plt.suptitle("Histograms of Selected Indicators", fontsize=16)
plt.subplots_adjust(top=0.85)
plt.show()
```

```{python}
#| label: pairplot 
#| echo: false
#| fig-cap: "pairplot"
sns.pairplot(df[['life_expectancy', 'health_expenditure_gdp_share', 'gdp_per_capita']])
plt.suptitle("Pair Plots of Selected Indicators")
plt.subplots_adjust(top=0.95)
plt.show()
```

```{python}
#| label: heatmap 
#| echo: false
#| fig-cap: "heatmap"
corr_matrix = df[['life_expectancy', 'health_expenditure_gdp_share', 'gdp_per_capita']].corr()
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm')
plt.title("Correlation Heatmap of Selected Indicators")
plt.show()
```

I picked these three indicators because I wanted to explore whether life expectancy of a country would be correlated to health expenditures, the GDP, niether or both. From this initial analysis, there is little to no correlation between life expectancy and either one of the other two variables, though there is slightly more positive correlation with health expenditure. This is visible in both @heatmap and @pairplot. There is a positive correlation between GDP and health expenditure, which makes sense intuitively, as a country makes more money, more of that money can be turned towards keeping people healthy rather than investing in industry or other sectors.

```{python}
# Calculate summary statistics
summary_stats = df[['life_expectancy', 'health_expenditure_gdp_share', 'gdp_per_capita']].describe()

# Create a table with key statistics
key_stats = summary_stats.loc[['mean', 'std', 'min', '25%', '50%', '75%', 'max']]

# Display the table
print(key_stats)
```

